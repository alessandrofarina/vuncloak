package vulnerability;

import dependency.Dependency;
import org.json.JSONArray;
import org.json.JSONObject;

import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Collection;
import java.util.Locale;

public class VulnRestAPI {

    private static String authorization;

    public static void authorize(String email, String token) {
        String toEncode = email + ":" + token;
        authorization = "Basic " + Base64.getEncoder().encodeToString(toEncode.getBytes());
    }

    public static Collection<Vulnerability> getVulnerabilities(Dependency dependency) throws IOException, InterruptedException, ParseException {
        ArrayList<Vulnerability> list = new ArrayList<>();

        String url = "https://ossindex.sonatype.org/api/v3/authorized/component-report/pkg:maven/" + dependency.getGroup() + "/" + dependency.getArtifact() + "@" + dependency.getVersion();

        HttpClient httpClient = HttpClient.newHttpClient();
        HttpRequest httpRequest = HttpRequest.newBuilder(
                        URI.create(url))
                .header("accept", "application/json")
                .header("Authorization", authorization)
                .build();

        HttpResponse<String> httpResponse = httpClient.send(httpRequest, HttpResponse.BodyHandlers.ofString());
        JSONObject jsonObject = new JSONObject(httpResponse.body());

        if(jsonObject.has("vulnerabilities")) {
            JSONArray vulnerabilities = jsonObject.getJSONArray("vulnerabilities");
            for(int i = 0; i < vulnerabilities.length(); ++i) {
                JSONObject vulnerability = vulnerabilities.getJSONObject(i);
                String cve = (String) vulnerability.get("cve");
                double cvssScore = NumberFormat.getInstance(Locale.US).parse(vulnerability.get("cvssScore").toString()).doubleValue();
                list.add(new Vulnerability(cve, cvssScore));
            }
        }

        return list;
    }

}
